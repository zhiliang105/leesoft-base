<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.1.xsd
           http://www.springframework.org/schema/tx  
           http://www.springframework.org/schema/tx/spring-tx-4.1.xsd  
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<description>Spring配置 </description>

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.leeframework">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!-- 读取配置文件 -->
	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:sysConfig.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${druid.initialPoolSize}" />
		<property name="maxActive" value="${druid.maxPoolSize}" />
		<property name="minIdle" value="${druid.minIdle}" />
		<property name="maxWait" value="${druid.maxWait}" />
		<property name="validationQuery" value="select 'x'" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="stat" />
	</bean>


	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.leeframework.modules.*.entity"></property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=${hibernate.dialect}
				hibernate.show_sql=${hibernate.show_sql}
				hibernate.format_sql=${hibernate.format_sql}
				hibernate.hbm2ddl.auto=${hibernate.hbm2ddl.auto}
				hibernate.cache.use_query_cache=${cache.use_query_cache}
				hibernate.cache.use_second_level_cache=${cache.use_second_level_cache}
				hibernate.cache.region.factory_class=${cache.region.factory_class}
				net.sf.ehcache.configurationResourceName=${net.sf.ehcache.configurationResourceName}
			</value>
		</property>
		<property name="entityInterceptor">
			<bean class="com.leeframework.core.interceptor.HibernateInterceptor" />
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- 
	JDK自带的代理模式,还是CGLIB代理模式,false表示JDK代理 
	使用这句话会报错：Could not obtain transaction-synchronized Session for current thread
	具体原因未知
	<aop:aspectj-autoproxy proxy-target-class="true" />
	-->

	<!-- 映入其他spring上下文配置 -->
	<import resource="spring-context-*.xml" />
</beans>














